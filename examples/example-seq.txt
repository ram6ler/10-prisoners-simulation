Call: prisoners.py -s

Method: sequential

Card placement:

Drawer:   1   2   3   4   5   6   7   8   9  10
  Card:   5   2   1   4   3   9  10   6   8   7

  Prisoner 1's turn...
    Guess 1: Peeks in drawer 1...
      Finds card 5.
    Guess 2: Peeks in drawer 5...
      Finds card 3.
    Guess 3: Peeks in drawer 3...
      Finds card 1.
        Success!

  Prisoner 2's turn...
    Guess 1: Peeks in drawer 2...
      Finds card 2.
        Success!

  Prisoner 3's turn...
    Guess 1: Peeks in drawer 3...
      Finds card 1.
    Guess 2: Peeks in drawer 1...
      Finds card 5.
    Guess 3: Peeks in drawer 5...
      Finds card 3.
        Success!

  Prisoner 4's turn...
    Guess 1: Peeks in drawer 4...
      Finds card 4.
        Success!

  Prisoner 5's turn...
    Guess 1: Peeks in drawer 5...
      Finds card 3.
    Guess 2: Peeks in drawer 3...
      Finds card 1.
    Guess 3: Peeks in drawer 1...
      Finds card 5.
        Success!

  Prisoner 6's turn...
    Guess 1: Peeks in drawer 6...
      Finds card 9.
    Guess 2: Peeks in drawer 9...
      Finds card 8.
    Guess 3: Peeks in drawer 8...
      Finds card 6.
        Success!

  Prisoner 7's turn...
    Guess 1: Peeks in drawer 7...
      Finds card 10.
    Guess 2: Peeks in drawer 10...
      Finds card 7.
        Success!

  Prisoner 8's turn...
    Guess 1: Peeks in drawer 8...
      Finds card 6.
    Guess 2: Peeks in drawer 6...
      Finds card 9.
    Guess 3: Peeks in drawer 9...
      Finds card 8.
        Success!

  Prisoner 9's turn...
    Guess 1: Peeks in drawer 9...
      Finds card 8.
    Guess 2: Peeks in drawer 8...
      Finds card 6.
    Guess 3: Peeks in drawer 6...
      Finds card 9.
        Success!

  Prisoner 10's turn...
    Guess 1: Peeks in drawer 10...
      Finds card 7.
    Guess 2: Peeks in drawer 7...
      Finds card 10.
        Success!

Drawer:   1   2   3   4   5   6   7   8   9  10
  Card:   5   2   1   4   3   9  10   6   8   7
Cycles: [[5, 3, 1], [2], [4], [9, 8, 6], [10, 7]]

Total successes: 10
